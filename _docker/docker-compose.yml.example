version: '3.8'

services:

  php-fpm-nginx:
    container_name: ${COMPOSE_PROJECT_NAME}-php-fpm-nginx
    image: ${COMPOSE_PROJECT_NAME}-php-fpm-nginx
    restart: always
    build:
      context: ./php-fpm-nginx
      dockerfile: Dockerfile
    ports:
      - "${NGINX_PORT}:80"
    environment:
      PHP_POOL_NAME: php-fpm-nginx
      PHP_DATE_TIMEZONE: ${PHP_DATE_TIMEZONE}
      PHP_MAX_EXECUTION_TIME: ${PHP_MAX_EXECUTION_TIME}
      PHP_MEMORY_LIMIT: ${PHP_MEMORY_LIMIT}
      PHP_PM_MAX_CHILDREN: ${PHP_PM_MAX_CHILDREN}
      PHP_PM_MAX_SPARE_SERVERS: ${PHP_PM_MAX_SPARE_SERVERS}
      PHP_POST_MAX_SIZE: ${PHP_POST_MAX_SIZE}
      PHP_UPLOAD_MAX_FILE_SIZE: ${PHP_UPLOAD_MAX_FILE_SIZE}
      AUTORUN_ENABLED: ${AUTORUN_ENABLED}
      AUTORUN_LARAVEL_STORAGE_LINK: ${AUTORUN_LARAVEL_STORAGE_LINK}
      AUTORUN_LARAVEL_MIGRATION: ${AUTORUN_LARAVEL_MIGRATION}
      SSL_MODE: ${SSL_MODE}
    volumes:
      - ../:/var/www/html/:cached
      - ${LOGS_DIR}/nginx:/var/log/nginx
      - ${LOGS_DIR}/php-fpm:/var/log/php-fpm
    networks:
      - network

  php-cli:
    container_name: ${COMPOSE_PROJECT_NAME}-php-cli
    image: ${COMPOSE_PROJECT_NAME}-php-cli
    build:
      context: ./php-cli
      dockerfile: Dockerfile
      args:
        - INSTALL_NODE=${INSTALL_NODE}
        - NODE_VERSION=${NODE_VERSION}
    volumes:
      - ../:/var/www/html/:cached
    tty: true
    networks:
      - network

  laravel-queue:
    container_name: ${COMPOSE_PROJECT_NAME}-laravel-queue
    image: ${COMPOSE_PROJECT_NAME}-php-fpm-nginx
    volumes:
      - ../:/var/www/html/:cached
    command: ["su", "webuser", "-c", "php artisan queue:work --tries=3"]
    environment:
      PHP_POOL_NAME: "laravel-queue"
    networks:
      - network
    depends_on:
      - php-fpm-nginx

  laravel-scheduler:
    container_name: ${COMPOSE_PROJECT_NAME}-laravel-scheduler
    image: ${COMPOSE_PROJECT_NAME}-php-fpm-nginx
    volumes:
      - ../:/var/www/html/:cached
    command: ["su", "webuser", "-c", "php artisan schedule:work"]
    environment:
      PHP_POOL_NAME: "laravel-scheduler"
    networks:
      - network
    depends_on:
      - php-fpm-nginx

  laravel-horizon:
    container_name: ${COMPOSE_PROJECT_NAME}-laravel-horizon
    image: ${COMPOSE_PROJECT_NAME}-php-fpm-nginx
    volumes:
      - ../:/var/www/html/:cached
    command: ["su", "webuser", "-c", "php artisan horizon"]
    environment:
      PHP_POOL_NAME: "laravel-horizon"
    networks:
      - network
    depends_on:
      - php-fpm-nginx

  redis:
    container_name: ${COMPOSE_PROJECT_NAME}-redis
    image: ${COMPOSE_PROJECT_NAME}-redis
    restart: always
    build:
      context: ./redis
      dockerfile: Dockerfile
    volumes:
      - ${DATA_DIR}/redis:/data
      - ${LOGS_DIR}/redis:/var/log/redis/
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      retries: 3
      timeout: 5s
    networks:
      - network
    depends_on:
      - php-fpm-nginx

  mysql:
    container_name: ${COMPOSE_PROJECT_NAME}-mysql
    image: ${COMPOSE_PROJECT_NAME}-mysql
    build:
      context: ./mysql
      dockerfile: Dockerfile
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    volumes:
      - ${LOGS_DIR}/mysql:/var/log/mysql
      - ${DATA_DIR}/mysql:/var/lib/mysql
    ports:
      - "3306:3306"
    networks:
      - network
    depends_on:
      - php-fpm-nginx

  meilisearch:
    container_name: ${COMPOSE_PROJECT_NAME}-meilisearch
    image: ${COMPOSE_PROJECT_NAME}-meilisearch
    build:
      context: ./meilisearch
      dockerfile: Dockerfile
    restart: always
    environment:
      MEILI_MASTER_KEY: ${MEILISEARCH_MASTER_KEY}
    volumes:
      - ${LOGS_DIR}/meilisearch:/var/log/meilisearch
      - ${DATA_DIR}/meilisearch:/var/lib/meilisearch
    ports:
      - "7700:7700"
    networks:
      - network
    depends_on:
      - mysql

  mailpit:
    container_name: ${COMPOSE_PROJECT_NAME}-mailpit
    image: ${COMPOSE_PROJECT_NAME}-mailpit
    build:
      context: ./mailpit
      dockerfile: Dockerfile
    ports:
      - "8025:8025"
      - "1025:1025"
    environment:
      MP_MAX_MESSAGES: ${MP_MAX_MESSAGES}
      MP_SMTP_AUTH_ACCEPT_ANY: ${MP_SMTP_AUTH_ACCEPT_ANY}
      MP_SMTP_AUTH_ALLOW_INSECURE: ${MP_SMTP_AUTH_ALLOW_INSECURE}
    networks:
      - network

networks:
  network:
    driver: bridge
    name: ${NETWORK_NAME}